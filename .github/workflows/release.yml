name: PyPi release

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /

jobs:

  release:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.5.1
    - name: Install dependencies
      run: |
        poetry install
    - name: build
      run: |
        poetry build
    - name: Get version
      id: get-version
      run: |
        echo "::set-output name=current_version::$(poetry version | awk '{print $2}')"
    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    outputs:
      publishedVersion: ${{ steps.get-version.outputs.current_version }}
  verify:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]
        os: [ ubuntu-22.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install with pip
        shell: bash
        run: |
          python -m pip install --upgrade pip

          # Retry 3 times before the steps actually fails because sometimes it takes a minute for pip to recognize the new version
          (echo "pip Install Attempt: 1" && pip install --force unity-sds-client==${{ needs.release.outputs.publishedVersion }}) || \
          (echo "pip Install Attempt: 2" && pip install --force unity-sds-client==${{ needs.release.outputs.publishedVersion }}) || \
          (echo "pip Install Attempt: 3" && pip install --force unity-sds-client==${{ needs.release.outputs.publishedVersion }}) || \
          (echo "pip Install Step Failed" && exit 1)
